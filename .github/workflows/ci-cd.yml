name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main    
      - dependabot/** # Gatilho para PRs do Dependabot
  workflow_dispatch: # Permite executar o pipeline manualmente

jobs:
  test:
    runs-on: ubuntu-latest # Máquina virtual para rodar os testes

    steps:
      # Etapa 1: Fazer checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # Etapa 2: Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Etapa 3: Instalar dependências do projeto
      - name: Install dependencies
        run: npm install

      # Etapa 4: Iniciar servidor local
      - name: Start local server
        run: npm run start & # Inicia o servidor em segundo plano
        env:
          NODE_ENV: test  # Define o ambiente como teste

      # Etapa 5: Verificar se o servidor está em execução
      - name: Wait for server to be ready
        run: |
          echo "Waiting for server to start..."
          for i in {1..10}; do
            curl -s http://localhost:8081 && break || sleep 3
          done
          echo "Server is up and running!"

      # Etapa 6: Executar testes Cypress
      - name: Run Cypress tests
        run: npx cypress run --spec "cypress/e2e/taskapp/*"

      # Etapa 7: Configurar conexão com MongoDB local e rodar os testes
      - name: Run tests with local MongoDB
        run: |
          echo "Setting up MongoDB URI..."
          export MONGO_URI=mongodb://localhost:27017/taskapp  # Configuração local para MongoDB
          echo "Running tests with local MongoDB..."
          npm run test-api  # Comando para rodar os testes no código do projeto
        env:
          NODE_ENV: test
          MONGO_URI: mongodb://localhost:27017/taskapp

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Render deploy
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"clearCache":true}' \
            https://api.render.com/v1/services/${{ secrets.SERVICE_ID }}/deploys
