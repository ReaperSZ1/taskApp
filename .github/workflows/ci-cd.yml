name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Permite executar o pipeline manualmente

jobs:
  test: 
    runs-on: ubuntu-latest # Máquina virtual para rodar os testes

    steps:
      # Etapa 1: Fazer checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # Etapa 2: Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Etapa 3: Instalar dependências do projeto
      - name: Install dependencies
        run: npm install

      # Etapa 4: Conectar ao servidor remoto e executar os testes
      - name: Run tests on remote server
        run: |
<<<<<<< HEAD
          export MONGO_URI=${{ secrets.MONGO_URI }}  # Usar o Mongo URI do GitHub Secret
          npm run test-api  # Rodar os testes diretamente no servidor remoto
        env:
          NODE_ENV: test  # Variáveis de ambiente de teste
=======
          echo "Running tests on remote server..."
          export MONGO_URI=${{ secrets.MONGO_URI }}  # Usar o Mongo URI do GitHub Secret
          echo "Connecting to remote MongoDB..."
          npm run test-api  # Rodar os testes diretamente no servidor remoto
        env:
          NODE_ENV: test  # Variáveis de ambiente de teste

      # Etapa 5: Confirmar se o servidor remoto está acessível antes de rodar os testes
      - name: Confirm server connection
        run: |
          echo "Checking connection to remote server..."
          curl -I ${{ secrets.SERVER_URL }} || exit 1  # Verificar se o servidor remoto está acessível
        env:
          SERVER_URL: ${{ secrets.SERVER_URL }}  # URL do servidor remoto, pode ser configurada nos secrets
>>>>>>> 36d1062ba222cec6aeac9f21a1c8a9c8f7335e0e

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Etapa 1: Configurar e verificar a URL do servidor de produção
      - name: Check production server
        run: |
          echo "Checking connection to production server..."
          curl -I ${{ secrets.PROD_SERVER_URL }} || exit 1  # Verificar a conexão com o servidor de produção
        env:
          PROD_SERVER_URL: ${{ secrets.PROD_SERVER_URL }}  # URL do servidor de produção

      # Etapa 2: Deploy para produção
      - name: Deploy to Production
<<<<<<< HEAD
        run: npm run deploy  # Deploy diretamente para o servidor remoto
=======
        run: |
          echo "Deploying to production server..."
          npm run deploy  # Deploy diretamente para o servidor remoto
>>>>>>> 36d1062ba222cec6aeac9f21a1c8a9c8f7335e0e
